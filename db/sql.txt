CREATE TABLE COURSE (
  COURSE_ID VARCHAR(255) NOT NULL,
  TITLE VARCHAR(255) NOT NULL,
  DESCRIPTION TEXT NOT NULL,
  PRIMARY KEY (COURSE_ID)
);

CREATE TABLE API (
  API_ID VARCHAR(255) NOT NULL,
  ISVALID BOOL NOT NULL,
  CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP NOT NULL,
  PRIMARY KEY (API_ID)
);

CREATE TABLE API_COURSE (
  API_ID VARCHAR(255) NOT NULL,
  COURSE_ID VARCHAR(255) NOT NULL,
  PRIMARY KEY (API_ID, COURSE_ID),
  FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE ON UPDATE RESTRICT,
  FOREIGN KEY (API_ID) REFERENCES API(API_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

CREATE TABLE MATERIAL (
  MATERIAL_ID VARCHAR(255) NOT NULL,
  SEQUENCE VARCHAR(255) NOT NULL,
  FILENAME VARCHAR(255) NOT NULL,
  COURSE_ID VARCHAR(255) NOT NULL REFERENCES COURSE(COURSE_ID),
  PRIMARY KEY (MATERIAL_ID),
  FOREIGN KEY (COURSE_ID) REFERENCES COURSE(COURSE_ID) ON DELETE CASCADE ON UPDATE RESTRICT
);

INSERT INTO API(API_ID,ISVALID) VALUES ("f60ad03e-2be5-4a42-8c01-0454f0055008",1);
INSERT INTO COURSE(COURSE_ID,TITLE,DESCRIPTION) VALUES ("TIC1001","Introduction to Computing and Programming I","This module aims to (i) expose students to computing principles (including abstraction and composition), (ii) provide a broad introduction to key computing concepts (including computer organisation, operating systems, data management, distributed applications), and (iii) introduce students to basic programming methodologies and problem solving techniques through a simple structured programming language.");
INSERT INTO API_COURSE(API_ID,COURSE_ID) VALUES ("f60ad03e-2be5-4a42-8c01-0454f0055008","TIC1001");
